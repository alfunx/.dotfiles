#!/usr/bin/env bash
# aur-tmpfs - setup tmpfs for chroot
[[ -v AUR_DEBUG ]] && set -o xtrace
set -o errexit
shopt -s extglob
argv0=tmpfs
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# default options
unmount=0

usage() {
    plain >&2 'usage: %s [-u]' "$argv0"
    exit 1
}

source /usr/share/makepkg/util/util.sh
source /usr/share/makepkg/util/message.sh
source /usr/share/makepkg/util/parseopts.sh

if [[ ! -v NO_COLOR ]] && [[ ! -v AUR_DEBUG ]]; then
    [[ -t 2 ]] && colorize
fi

# mollyguard for makepkg
if (( UID == 0 )) && [[ ! -v AUR_ASROOT ]]; then
    warning 'aur-%s is not meant to be run as root.' "$argv0"
    warning 'To proceed anyway, set the %s variable.' 'AUR_ASROOT'
    exit 1
fi

opt_short='u'
opt_long=('unmount')

if ! parseopts "$opt_short" "${opt_long[@]}" -- "$@"; then
    usage
fi
set -- "${OPTRET[@]}"

while true; do
    case "$1" in
        -u|--unmount) unmount=1 ;;
        --)           shift; break ;;
    esac
    shift
done

if ((unmount)); then
    mountpoint -q /var/lib/aurbuild \
        && sudo umount /var/lib/aurbuild
else
    mountpoint -q /var/lib/aurbuild \
        && echo 'Already mounted.' \
        && exit 1
    sudo mount /var/lib/aurbuild
fi

# vim: set et sw=4 sts=4 ft=sh:
